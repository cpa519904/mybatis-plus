package ${package.Dal};
import com.baomidou.mybatisplus.core.conditions.Wrapper;
import com.baomidou.mybatisplus.core.toolkit.Wrappers;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import ${package.Entity}.${entity};
import ${package.Mapper}.${table.mapperName};
import ${superDalClass};
import org.springframework.stereotype.Repository;

import java.io.Serializable;
import java.util.List;
/**
 * <p>
 * $!{table.comment} 数据访问类
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Repository
#if(${kotlin})
open class ${table.dalName} : ${superDalName}<${table.mapperName}, ${entity}>(){
    @Override
    public int insert(${entity} entity) {
        return super.insert(entity);
    }

    @Override
    public int deleteById(Serializable id) {
        return super.deleteById(id);
    }

    @Override
    public int updateById(${entity} entity) {
        return super.updateById(entity);
    }

    public ${entity} selectOne(${entity} entity) {
        return super.selectOne(Wrappers.query(entity));
    }

    public Integer selectCount(${entity} entity) {
        return super.selectCount(Wrappers.query(entity));
    }

    public List<${entity}> selectList(${entity} entity) {
        return super.selectList(Wrappers.query(entity));
    }
    public Page<${entity}>  selectPage(Page page,${entity} entity) {
        return super.selectPage(page,Wrappers.query(entity));
    }
}
#else
public class ${table.dalName} extends ${superDalName}<${table.mapperName}, ${entity}> {
    @Override
    public int insert(${entity} entity) {
        return super.insert(entity);
    }

    @Override
    public int deleteById(Serializable id) {
        return super.deleteById(id);
    }

    @Override
    public int updateById(${entity} entity) {
        return super.updateById(entity);
    }

    public ${entity} selectOne(${entity} entity) {
        return super.selectOne(Wrappers.query(entity));
    }

    public Integer selectCount(${entity} entity) {
        return super.selectCount(Wrappers.query(entity));
    }

    public List<${entity}> selectList(${entity} entity) {
        return super.selectList(Wrappers.query(entity));
    }
    public Page<${entity}>  selectPage(Page page,${entity} entity) {
        return super.selectPage(page,Wrappers.query(entity));
    }

}
#end
